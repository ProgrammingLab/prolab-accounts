version: "3"

services:
  accounts:
    image: programminglab/prolab-accounts:latest
    restart: always
    volumes:
      - ./sqlboiler.toml:/sqlboiler.toml
    env_file:
      - ./.env
    depends_on:
      - pg
      - redis
      - hydra
      - mailhog
    ports:
      - "127.0.0.1:3000:3000"
  
  ridgepole:
    build: ./db
    volumes:
      - ./db:/db
    environment:
      - DATABASE_URL=${DATABASE_URL_RIDGEPOLE}
      - TEST_DATABASE_URL=${TEST_DATABASE_URL_RIDGEPOLE}

  hydra-migrate:
    image: oryd/hydra:v1.0.0-rc.6_oryOS.10-alpine
    depends_on:
      - pg
    environment:
#      - LOG_LEVEL=debug
      - DATABASE_URL=${DATABASE_URL_HYDRA}
    command:
      migrate sql -e
    restart: on-failure

  hydra:
    image: oryd/hydra:v1.0.0-rc.6_oryOS.10-alpine
    depends_on:
      - hydra-migrate
    ports:
      # Public port
      - "127.0.0.1:4444:4444"
      # Admin port
      - "127.0.0.1:4445:4445"
      # Port for hydra token user
      - "127.0.0.1:5555:5555"
    command:
      serve all --dangerous-force-http
    environment:
#      - LOG_LEVEL=debug
      - OAUTH2_ISSUER_URL=${OAUTH2_ISSUER_URL}
      - OAUTH2_CONSENT_URL=${OAUTH2_CONSENT_URL}
      - OAUTH2_LOGIN_URL=${OAUTH2_LOGIN_URL}
      - DATABASE_URL=${DATABASE_URL_HYDRA}
      - SYSTEM_SECRET=${HYDRA_SECRET}
      - OAUTH2_SHARE_ERROR_DEBUG=1
      - OIDC_SUBJECT_TYPES_SUPPORTED=public,pairwise
      - OIDC_SUBJECT_TYPE_PAIRWISE_SALT=${HYDRA_SALT}
#     - OAUTH2_ACCESS_TOKEN_STRATEGY=jwt
#     Uncomment the following lines when configuring tracing
#      - TRACING_PROVIDER=jaeger
#      - TRACING_PROVIDER_JAEGER_SAMPLING_SERVER_URL=http://jaeger:5778/sampling
#      - TRACING_PROVIDER_JAEGER_LOCAL_AGENT_ADDRESS=jaeger:6831
#      - TRACING_PROVIDER_JAEGER_SAMPLING_TYPE=const
#      - TRACING_PROVIDER_JAEGER_SAMPLING_VALUE=1
    restart: unless-stopped

  pg:
    image: postgres:11-alpine
    hostname: pg
    environment:
      - POSTGRES_DB="accounts"
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD} 
    restart: always
    volumes:
      - pg-data:/var/lib/postgresql/data
    logging:
      options:
        max-size: 5m
        max-file: "10"
    ports:
      - "127.0.0.1:5432:5432"

  redis:
    image: redis:4.0.11-alpine
    hostname: redis
    restart: always
    logging:
      options:
        max-size: 5m
        max-file: "10"
    ports:
      - "127.0.0.1:6379:6379"

  minio:
    image: minio/minio
    command: server /data
    hostname: minio
    environment:
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY} 
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_BROWSER=${MINIO_BROWSER}
    restart: always
    volumes:
      - minio-data:/data
    logging:
      options:
        max-size: 5m
        max-file: "10"
    ports:
      - "127.0.0.1:9100:9000"

  mailhog:
    image: mailhog/mailhog
    hostname: smtp
    restart: always
    ports:
      - "127.0.0.1:1025:1025"
      - "127.0.0.1:8025:8025"

volumes:
  pg-data:
    driver: local
  minio-data:
    driver: local
