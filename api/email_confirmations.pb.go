// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: email_confirmations.proto

package api_pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	io "io"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type ConfirmEmailRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfirmEmailRequest) Reset()         { *m = ConfirmEmailRequest{} }
func (m *ConfirmEmailRequest) String() string { return proto.CompactTextString(m) }
func (*ConfirmEmailRequest) ProtoMessage()    {}
func (*ConfirmEmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_172025453124c326, []int{0}
}
func (m *ConfirmEmailRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConfirmEmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConfirmEmailRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ConfirmEmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmEmailRequest.Merge(m, src)
}
func (m *ConfirmEmailRequest) XXX_Size() int {
	return m.Size()
}
func (m *ConfirmEmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmEmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmEmailRequest proto.InternalMessageInfo

func (m *ConfirmEmailRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type CreateEmailConfirmationRequest struct {
	NewEmail             string   `protobuf:"bytes,1,opt,name=new_email,json=newEmail,proto3" json:"new_email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateEmailConfirmationRequest) Reset()         { *m = CreateEmailConfirmationRequest{} }
func (m *CreateEmailConfirmationRequest) String() string { return proto.CompactTextString(m) }
func (*CreateEmailConfirmationRequest) ProtoMessage()    {}
func (*CreateEmailConfirmationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_172025453124c326, []int{1}
}
func (m *CreateEmailConfirmationRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateEmailConfirmationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateEmailConfirmationRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateEmailConfirmationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateEmailConfirmationRequest.Merge(m, src)
}
func (m *CreateEmailConfirmationRequest) XXX_Size() int {
	return m.Size()
}
func (m *CreateEmailConfirmationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateEmailConfirmationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateEmailConfirmationRequest proto.InternalMessageInfo

func (m *CreateEmailConfirmationRequest) GetNewEmail() string {
	if m != nil {
		return m.NewEmail
	}
	return ""
}

func init() {
	proto.RegisterType((*ConfirmEmailRequest)(nil), "programming_lab.prolab_accounts.ConfirmEmailRequest")
	proto.RegisterType((*CreateEmailConfirmationRequest)(nil), "programming_lab.prolab_accounts.CreateEmailConfirmationRequest")
}

func init() { proto.RegisterFile("email_confirmations.proto", fileDescriptor_172025453124c326) }

var fileDescriptor_172025453124c326 = []byte{
	// 343 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x41, 0x4b, 0xfb, 0x30,
	0x18, 0xc6, 0xc9, 0xe0, 0xff, 0xc7, 0x05, 0x4f, 0x55, 0x74, 0x76, 0xd2, 0x49, 0x51, 0x90, 0x89,
	0x09, 0xe8, 0x4e, 0x8a, 0x08, 0x1b, 0xbb, 0x79, 0x90, 0x79, 0xf3, 0x52, 0x92, 0xf2, 0xae, 0x06,
	0xdb, 0xa4, 0xa6, 0xa9, 0x43, 0xc4, 0x8b, 0x27, 0xef, 0x9e, 0xfc, 0x38, 0xde, 0x3c, 0x0a, 0x7e,
	0x01, 0x19, 0x7e, 0x10, 0x69, 0xba, 0xe1, 0x64, 0xd4, 0x1d, 0xdf, 0xbc, 0xef, 0x93, 0xe7, 0x97,
	0xe7, 0x0d, 0xde, 0x80, 0x84, 0x89, 0x38, 0x08, 0x95, 0x1c, 0x0a, 0x9d, 0x30, 0x23, 0x94, 0xcc,
	0x48, 0xaa, 0x95, 0x51, 0x4e, 0x2b, 0xd5, 0x2a, 0xd2, 0x2c, 0x49, 0x84, 0x8c, 0x82, 0x98, 0xf1,
	0xe2, 0x38, 0x66, 0x3c, 0x60, 0x61, 0xa8, 0x72, 0x69, 0x32, 0x77, 0x33, 0x52, 0x2a, 0x8a, 0x81,
	0xb2, 0x54, 0x50, 0x26, 0xa5, 0x32, 0xb3, 0x72, 0xb7, 0x39, 0xe9, 0xda, 0x8a, 0xe7, 0x43, 0x0a,
	0x49, 0x6a, 0xee, 0xca, 0xa6, 0xbf, 0x87, 0x57, 0x7a, 0xa5, 0x65, 0xbf, 0xf0, 0x1f, 0xc0, 0x4d,
	0x0e, 0x99, 0x71, 0x56, 0xf1, 0x3f, 0xa3, 0xae, 0x41, 0x36, 0xd0, 0x16, 0xda, 0xad, 0x0f, 0xca,
	0xc2, 0x3f, 0xc1, 0x5e, 0x4f, 0x03, 0x33, 0x60, 0x67, 0x7b, 0x33, 0xa8, 0x53, 0x5d, 0x13, 0xd7,
	0x25, 0x8c, 0x02, 0xfb, 0x96, 0x89, 0x76, 0x49, 0xc2, 0xc8, 0xce, 0x1f, 0xbc, 0xd6, 0x70, 0x63,
	0x4e, 0x79, 0x01, 0xfa, 0x56, 0x84, 0xe0, 0xbc, 0x20, 0xbc, 0x5e, 0x71, 0xb9, 0x73, 0x4a, 0x16,
	0x24, 0x40, 0xfe, 0xc6, 0x72, 0xd7, 0x48, 0x99, 0x01, 0x99, 0x66, 0x40, 0xfa, 0x45, 0x06, 0xfe,
	0xce, 0xe3, 0xc7, 0xd7, 0x73, 0xad, 0xe5, 0xbb, 0x34, 0xcf, 0x40, 0x53, 0x8b, 0x9d, 0xd1, 0x5f,
	0x3b, 0x38, 0x42, 0x6d, 0xe7, 0x09, 0xe1, 0xe5, 0xd9, 0x94, 0x9c, 0xce, 0x62, 0xa0, 0xf9, 0x50,
	0x2b, 0x29, 0xda, 0x96, 0x62, 0xdb, 0xf5, 0xab, 0x29, 0xe8, 0xbd, 0xdd, 0xc0, 0x43, 0xb7, 0xfb,
	0x36, 0xf6, 0xd0, 0xfb, 0xd8, 0x43, 0x9f, 0x63, 0x0f, 0x5d, 0x76, 0x22, 0x61, 0xae, 0x72, 0x4e,
	0x42, 0x95, 0xd0, 0xf3, 0x1f, 0xa2, 0x33, 0xc6, 0x69, 0x09, 0xb4, 0x3f, 0x05, 0x2a, 0xfe, 0xc6,
	0x31, 0x4b, 0x45, 0x90, 0x72, 0xfe, 0xdf, 0xfa, 0x1f, 0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0xd2,
	0x4f, 0x29, 0xac, 0x73, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EmailConfirmationServiceClient is the client API for EmailConfirmationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EmailConfirmationServiceClient interface {
	CreateEmailConfirmation(ctx context.Context, in *CreateEmailConfirmationRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ConfirmEmail(ctx context.Context, in *ConfirmEmailRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type emailConfirmationServiceClient struct {
	cc *grpc.ClientConn
}

func NewEmailConfirmationServiceClient(cc *grpc.ClientConn) EmailConfirmationServiceClient {
	return &emailConfirmationServiceClient{cc}
}

func (c *emailConfirmationServiceClient) CreateEmailConfirmation(ctx context.Context, in *CreateEmailConfirmationRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/programming_lab.prolab_accounts.EmailConfirmationService/CreateEmailConfirmation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *emailConfirmationServiceClient) ConfirmEmail(ctx context.Context, in *ConfirmEmailRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/programming_lab.prolab_accounts.EmailConfirmationService/ConfirmEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EmailConfirmationServiceServer is the server API for EmailConfirmationService service.
type EmailConfirmationServiceServer interface {
	CreateEmailConfirmation(context.Context, *CreateEmailConfirmationRequest) (*empty.Empty, error)
	ConfirmEmail(context.Context, *ConfirmEmailRequest) (*empty.Empty, error)
}

func RegisterEmailConfirmationServiceServer(s *grpc.Server, srv EmailConfirmationServiceServer) {
	s.RegisterService(&_EmailConfirmationService_serviceDesc, srv)
}

func _EmailConfirmationService_CreateEmailConfirmation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEmailConfirmationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmailConfirmationServiceServer).CreateEmailConfirmation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/programming_lab.prolab_accounts.EmailConfirmationService/CreateEmailConfirmation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmailConfirmationServiceServer).CreateEmailConfirmation(ctx, req.(*CreateEmailConfirmationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EmailConfirmationService_ConfirmEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfirmEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmailConfirmationServiceServer).ConfirmEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/programming_lab.prolab_accounts.EmailConfirmationService/ConfirmEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmailConfirmationServiceServer).ConfirmEmail(ctx, req.(*ConfirmEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EmailConfirmationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "programming_lab.prolab_accounts.EmailConfirmationService",
	HandlerType: (*EmailConfirmationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateEmailConfirmation",
			Handler:    _EmailConfirmationService_CreateEmailConfirmation_Handler,
		},
		{
			MethodName: "ConfirmEmail",
			Handler:    _EmailConfirmationService_ConfirmEmail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "email_confirmations.proto",
}

func (m *ConfirmEmailRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConfirmEmailRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Token) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintEmailConfirmations(dAtA, i, uint64(len(m.Token)))
		i += copy(dAtA[i:], m.Token)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *CreateEmailConfirmationRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateEmailConfirmationRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.NewEmail) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintEmailConfirmations(dAtA, i, uint64(len(m.NewEmail)))
		i += copy(dAtA[i:], m.NewEmail)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintEmailConfirmations(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *ConfirmEmailRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovEmailConfirmations(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateEmailConfirmationRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.NewEmail)
	if l > 0 {
		n += 1 + l + sovEmailConfirmations(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovEmailConfirmations(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozEmailConfirmations(x uint64) (n int) {
	return sovEmailConfirmations(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ConfirmEmailRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEmailConfirmations
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConfirmEmailRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConfirmEmailRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEmailConfirmations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEmailConfirmations
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEmailConfirmations
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEmailConfirmations(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthEmailConfirmations
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthEmailConfirmations
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateEmailConfirmationRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEmailConfirmations
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateEmailConfirmationRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateEmailConfirmationRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewEmail", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEmailConfirmations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEmailConfirmations
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEmailConfirmations
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewEmail = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEmailConfirmations(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthEmailConfirmations
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthEmailConfirmations
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipEmailConfirmations(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowEmailConfirmations
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEmailConfirmations
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEmailConfirmations
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthEmailConfirmations
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthEmailConfirmations
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowEmailConfirmations
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipEmailConfirmations(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthEmailConfirmations
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthEmailConfirmations = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowEmailConfirmations   = fmt.Errorf("proto: integer overflow")
)
