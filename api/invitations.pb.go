// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: invitations.proto

package api_pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	io "io"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Invitation struct {
	InvitationId         uint32   `protobuf:"varint,1,opt,name=invitation_id,json=invitationId,proto3" json:"invitation_id,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Invitation) Reset()         { *m = Invitation{} }
func (m *Invitation) String() string { return proto.CompactTextString(m) }
func (*Invitation) ProtoMessage()    {}
func (*Invitation) Descriptor() ([]byte, []int) {
	return fileDescriptor_32c84c1d6fe01925, []int{0}
}
func (m *Invitation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Invitation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Invitation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Invitation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Invitation.Merge(m, src)
}
func (m *Invitation) XXX_Size() int {
	return m.Size()
}
func (m *Invitation) XXX_DiscardUnknown() {
	xxx_messageInfo_Invitation.DiscardUnknown(m)
}

var xxx_messageInfo_Invitation proto.InternalMessageInfo

func (m *Invitation) GetInvitationId() uint32 {
	if m != nil {
		return m.InvitationId
	}
	return 0
}

func (m *Invitation) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type ListInvitationsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListInvitationsRequest) Reset()         { *m = ListInvitationsRequest{} }
func (m *ListInvitationsRequest) String() string { return proto.CompactTextString(m) }
func (*ListInvitationsRequest) ProtoMessage()    {}
func (*ListInvitationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32c84c1d6fe01925, []int{1}
}
func (m *ListInvitationsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListInvitationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListInvitationsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListInvitationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListInvitationsRequest.Merge(m, src)
}
func (m *ListInvitationsRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListInvitationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListInvitationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListInvitationsRequest proto.InternalMessageInfo

type ListInvitationsResponse struct {
	Invitations          []*Invitation `protobuf:"bytes,1,rep,name=invitations,proto3" json:"invitations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListInvitationsResponse) Reset()         { *m = ListInvitationsResponse{} }
func (m *ListInvitationsResponse) String() string { return proto.CompactTextString(m) }
func (*ListInvitationsResponse) ProtoMessage()    {}
func (*ListInvitationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_32c84c1d6fe01925, []int{2}
}
func (m *ListInvitationsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListInvitationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListInvitationsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListInvitationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListInvitationsResponse.Merge(m, src)
}
func (m *ListInvitationsResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListInvitationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListInvitationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListInvitationsResponse proto.InternalMessageInfo

func (m *ListInvitationsResponse) GetInvitations() []*Invitation {
	if m != nil {
		return m.Invitations
	}
	return nil
}

type GetInvitationRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInvitationRequest) Reset()         { *m = GetInvitationRequest{} }
func (m *GetInvitationRequest) String() string { return proto.CompactTextString(m) }
func (*GetInvitationRequest) ProtoMessage()    {}
func (*GetInvitationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32c84c1d6fe01925, []int{3}
}
func (m *GetInvitationRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetInvitationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetInvitationRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetInvitationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInvitationRequest.Merge(m, src)
}
func (m *GetInvitationRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetInvitationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInvitationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInvitationRequest proto.InternalMessageInfo

func (m *GetInvitationRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type CreateInvitationRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateInvitationRequest) Reset()         { *m = CreateInvitationRequest{} }
func (m *CreateInvitationRequest) String() string { return proto.CompactTextString(m) }
func (*CreateInvitationRequest) ProtoMessage()    {}
func (*CreateInvitationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32c84c1d6fe01925, []int{4}
}
func (m *CreateInvitationRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateInvitationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateInvitationRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateInvitationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateInvitationRequest.Merge(m, src)
}
func (m *CreateInvitationRequest) XXX_Size() int {
	return m.Size()
}
func (m *CreateInvitationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateInvitationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateInvitationRequest proto.InternalMessageInfo

func (m *CreateInvitationRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type DeleteInvitationRequest struct {
	InvitationId         uint32   `protobuf:"varint,1,opt,name=invitation_id,json=invitationId,proto3" json:"invitation_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteInvitationRequest) Reset()         { *m = DeleteInvitationRequest{} }
func (m *DeleteInvitationRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteInvitationRequest) ProtoMessage()    {}
func (*DeleteInvitationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32c84c1d6fe01925, []int{5}
}
func (m *DeleteInvitationRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteInvitationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteInvitationRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteInvitationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteInvitationRequest.Merge(m, src)
}
func (m *DeleteInvitationRequest) XXX_Size() int {
	return m.Size()
}
func (m *DeleteInvitationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteInvitationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteInvitationRequest proto.InternalMessageInfo

func (m *DeleteInvitationRequest) GetInvitationId() uint32 {
	if m != nil {
		return m.InvitationId
	}
	return 0
}

func init() {
	proto.RegisterType((*Invitation)(nil), "programming_lab.prolab_accounts.Invitation")
	proto.RegisterType((*ListInvitationsRequest)(nil), "programming_lab.prolab_accounts.ListInvitationsRequest")
	proto.RegisterType((*ListInvitationsResponse)(nil), "programming_lab.prolab_accounts.ListInvitationsResponse")
	proto.RegisterType((*GetInvitationRequest)(nil), "programming_lab.prolab_accounts.GetInvitationRequest")
	proto.RegisterType((*CreateInvitationRequest)(nil), "programming_lab.prolab_accounts.CreateInvitationRequest")
	proto.RegisterType((*DeleteInvitationRequest)(nil), "programming_lab.prolab_accounts.DeleteInvitationRequest")
}

func init() { proto.RegisterFile("invitations.proto", fileDescriptor_32c84c1d6fe01925) }

var fileDescriptor_32c84c1d6fe01925 = []byte{
	// 477 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0x4f, 0x6b, 0xd4, 0x40,
	0x18, 0xc6, 0x99, 0xfa, 0x07, 0xfa, 0xae, 0x8b, 0xed, 0xb0, 0xec, 0x2e, 0xb1, 0xae, 0xcb, 0xe8,
	0x61, 0x59, 0x35, 0x03, 0x55, 0x51, 0x14, 0x3c, 0x54, 0xa5, 0x14, 0x2a, 0x48, 0xbc, 0x79, 0x09,
	0x93, 0xec, 0x98, 0x0e, 0x26, 0x33, 0x31, 0x33, 0x29, 0x48, 0xe9, 0xc5, 0x4f, 0xa0, 0x78, 0xf1,
	0xe8, 0xc7, 0xf1, 0x28, 0xf8, 0x05, 0x64, 0xf1, 0x43, 0x78, 0x94, 0xfc, 0x69, 0x93, 0xdd, 0xa6,
	0xa4, 0x7b, 0x9c, 0x99, 0xbc, 0xf3, 0xfe, 0x9e, 0xe7, 0x99, 0x37, 0xb0, 0x29, 0xe4, 0xa1, 0x30,
	0xcc, 0x08, 0x25, 0xb5, 0x1d, 0x27, 0xca, 0x28, 0x7c, 0x2b, 0x4e, 0x54, 0x90, 0xb0, 0x28, 0x12,
	0x32, 0x70, 0x43, 0xe6, 0x65, 0xdb, 0x21, 0xf3, 0x5c, 0xe6, 0xfb, 0x2a, 0x95, 0x46, 0x5b, 0x5b,
	0x81, 0x52, 0x41, 0xc8, 0x29, 0x8b, 0x05, 0x65, 0x52, 0xaa, 0x85, 0x72, 0xeb, 0x46, 0x79, 0x9a,
	0xaf, 0xbc, 0xf4, 0x3d, 0xe5, 0x51, 0x6c, 0x3e, 0x95, 0x87, 0x9d, 0x54, 0xf3, 0xa4, 0xfc, 0x92,
	0xec, 0x02, 0xec, 0x9d, 0x76, 0xc7, 0xb7, 0xa1, 0x5b, 0xb1, 0xb8, 0x62, 0x36, 0x44, 0x63, 0x34,
	0xe9, 0x3a, 0xd7, 0xaa, 0xcd, 0xbd, 0x19, 0xee, 0xc1, 0x15, 0x1e, 0x31, 0x11, 0x0e, 0xd7, 0xc6,
	0x68, 0xb2, 0xee, 0x14, 0x0b, 0x32, 0x84, 0xfe, 0xbe, 0xd0, 0xa6, 0xba, 0x4c, 0x3b, 0xfc, 0x63,
	0xca, 0xb5, 0x21, 0x07, 0x30, 0x38, 0x73, 0xa2, 0x63, 0x25, 0x35, 0xc7, 0xaf, 0xa1, 0x53, 0xd3,
	0x3e, 0x44, 0xe3, 0x4b, 0x93, 0xce, 0xf6, 0x5d, 0xbb, 0x45, 0xbc, 0x5d, 0x5d, 0xe5, 0xd4, 0xeb,
	0xc9, 0x3d, 0xe8, 0xed, 0xf2, 0x5a, 0xa3, 0x92, 0x20, 0x23, 0x36, 0xea, 0x03, 0x97, 0xb9, 0x9c,
	0x75, 0xa7, 0x58, 0x10, 0x0a, 0x83, 0x17, 0x09, 0x67, 0x86, 0x37, 0x16, 0x14, 0x12, 0x51, 0x5d,
	0xe2, 0x73, 0x18, 0xbc, 0xe4, 0x21, 0x6f, 0x2a, 0xb8, 0x88, 0x71, 0xdb, 0xff, 0x2e, 0xc3, 0x66,
	0x55, 0xfa, 0x96, 0x27, 0x87, 0xc2, 0xe7, 0xf8, 0x07, 0x82, 0xeb, 0x4b, 0xfe, 0xe0, 0xc7, 0xad,
	0x16, 0x34, 0x7b, 0x6d, 0x3d, 0x59, 0xbd, 0xb0, 0x88, 0x82, 0x58, 0x9f, 0x7f, 0xff, 0xfd, 0xb6,
	0xd6, 0xc3, 0x98, 0xb2, 0x59, 0x24, 0x24, 0xad, 0xf9, 0x8a, 0xbf, 0x22, 0xe8, 0x2e, 0x18, 0x8b,
	0x1f, 0xb5, 0xf6, 0x69, 0x0a, 0xc2, 0x5a, 0x25, 0x5a, 0xb2, 0x95, 0x13, 0xf5, 0x71, 0xaf, 0xce,
	0x42, 0x8f, 0xf2, 0xf0, 0x8e, 0xf1, 0x77, 0x04, 0x1b, 0xcb, 0xf1, 0xe1, 0x76, 0xf9, 0xe7, 0x24,
	0xbe, 0x1a, 0xd9, 0xcd, 0x9c, 0x6c, 0x40, 0x1a, 0xbc, 0x7a, 0x8a, 0xa6, 0xf8, 0x0b, 0x82, 0x8d,
	0xe5, 0x87, 0x72, 0x01, 0xb4, 0x73, 0xde, 0x96, 0xd5, 0xb7, 0x8b, 0x69, 0xb6, 0x4f, 0xa6, 0xd9,
	0x7e, 0x95, 0x4d, 0x33, 0x99, 0xe6, 0x14, 0x77, 0xa6, 0xe4, 0x2c, 0x05, 0x3d, 0x5a, 0x78, 0x8d,
	0xc7, 0x3b, 0x3b, 0x3f, 0xe7, 0x23, 0xf4, 0x6b, 0x3e, 0x42, 0x7f, 0xe6, 0x23, 0xf4, 0xee, 0x61,
	0x20, 0xcc, 0x41, 0xea, 0xd9, 0xbe, 0x8a, 0xe8, 0x9b, 0x8a, 0x6a, 0x9f, 0x79, 0xb4, 0x80, 0xba,
	0x7f, 0x02, 0x95, 0xfd, 0x5f, 0x9e, 0xb1, 0x58, 0xb8, 0xb1, 0xe7, 0x5d, 0xcd, 0xfb, 0x3f, 0xf8,
	0x1f, 0x00, 0x00, 0xff, 0xff, 0x26, 0xda, 0xf6, 0xb8, 0xaf, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InvitationServiceClient is the client API for InvitationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InvitationServiceClient interface {
	ListInvitations(ctx context.Context, in *ListInvitationsRequest, opts ...grpc.CallOption) (*ListInvitationsResponse, error)
	GetInvitation(ctx context.Context, in *GetInvitationRequest, opts ...grpc.CallOption) (*Invitation, error)
	CreateInvitation(ctx context.Context, in *CreateInvitationRequest, opts ...grpc.CallOption) (*Invitation, error)
	DeleteInvitation(ctx context.Context, in *DeleteInvitationRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type invitationServiceClient struct {
	cc *grpc.ClientConn
}

func NewInvitationServiceClient(cc *grpc.ClientConn) InvitationServiceClient {
	return &invitationServiceClient{cc}
}

func (c *invitationServiceClient) ListInvitations(ctx context.Context, in *ListInvitationsRequest, opts ...grpc.CallOption) (*ListInvitationsResponse, error) {
	out := new(ListInvitationsResponse)
	err := c.cc.Invoke(ctx, "/programming_lab.prolab_accounts.InvitationService/ListInvitations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *invitationServiceClient) GetInvitation(ctx context.Context, in *GetInvitationRequest, opts ...grpc.CallOption) (*Invitation, error) {
	out := new(Invitation)
	err := c.cc.Invoke(ctx, "/programming_lab.prolab_accounts.InvitationService/GetInvitation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *invitationServiceClient) CreateInvitation(ctx context.Context, in *CreateInvitationRequest, opts ...grpc.CallOption) (*Invitation, error) {
	out := new(Invitation)
	err := c.cc.Invoke(ctx, "/programming_lab.prolab_accounts.InvitationService/CreateInvitation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *invitationServiceClient) DeleteInvitation(ctx context.Context, in *DeleteInvitationRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/programming_lab.prolab_accounts.InvitationService/DeleteInvitation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InvitationServiceServer is the server API for InvitationService service.
type InvitationServiceServer interface {
	ListInvitations(context.Context, *ListInvitationsRequest) (*ListInvitationsResponse, error)
	GetInvitation(context.Context, *GetInvitationRequest) (*Invitation, error)
	CreateInvitation(context.Context, *CreateInvitationRequest) (*Invitation, error)
	DeleteInvitation(context.Context, *DeleteInvitationRequest) (*empty.Empty, error)
}

func RegisterInvitationServiceServer(s *grpc.Server, srv InvitationServiceServer) {
	s.RegisterService(&_InvitationService_serviceDesc, srv)
}

func _InvitationService_ListInvitations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListInvitationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InvitationServiceServer).ListInvitations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/programming_lab.prolab_accounts.InvitationService/ListInvitations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InvitationServiceServer).ListInvitations(ctx, req.(*ListInvitationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InvitationService_GetInvitation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInvitationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InvitationServiceServer).GetInvitation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/programming_lab.prolab_accounts.InvitationService/GetInvitation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InvitationServiceServer).GetInvitation(ctx, req.(*GetInvitationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InvitationService_CreateInvitation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateInvitationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InvitationServiceServer).CreateInvitation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/programming_lab.prolab_accounts.InvitationService/CreateInvitation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InvitationServiceServer).CreateInvitation(ctx, req.(*CreateInvitationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InvitationService_DeleteInvitation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteInvitationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InvitationServiceServer).DeleteInvitation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/programming_lab.prolab_accounts.InvitationService/DeleteInvitation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InvitationServiceServer).DeleteInvitation(ctx, req.(*DeleteInvitationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _InvitationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "programming_lab.prolab_accounts.InvitationService",
	HandlerType: (*InvitationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListInvitations",
			Handler:    _InvitationService_ListInvitations_Handler,
		},
		{
			MethodName: "GetInvitation",
			Handler:    _InvitationService_GetInvitation_Handler,
		},
		{
			MethodName: "CreateInvitation",
			Handler:    _InvitationService_CreateInvitation_Handler,
		},
		{
			MethodName: "DeleteInvitation",
			Handler:    _InvitationService_DeleteInvitation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "invitations.proto",
}

func (m *Invitation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Invitation) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.InvitationId != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintInvitations(dAtA, i, uint64(m.InvitationId))
	}
	if len(m.Email) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintInvitations(dAtA, i, uint64(len(m.Email)))
		i += copy(dAtA[i:], m.Email)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ListInvitationsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListInvitationsRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ListInvitationsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListInvitationsResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Invitations) > 0 {
		for _, msg := range m.Invitations {
			dAtA[i] = 0xa
			i++
			i = encodeVarintInvitations(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetInvitationRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetInvitationRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Token) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintInvitations(dAtA, i, uint64(len(m.Token)))
		i += copy(dAtA[i:], m.Token)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *CreateInvitationRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateInvitationRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Email) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintInvitations(dAtA, i, uint64(len(m.Email)))
		i += copy(dAtA[i:], m.Email)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DeleteInvitationRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteInvitationRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.InvitationId != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintInvitations(dAtA, i, uint64(m.InvitationId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintInvitations(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *Invitation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InvitationId != 0 {
		n += 1 + sovInvitations(uint64(m.InvitationId))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovInvitations(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListInvitationsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListInvitationsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Invitations) > 0 {
		for _, e := range m.Invitations {
			l = e.Size()
			n += 1 + l + sovInvitations(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetInvitationRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovInvitations(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateInvitationRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovInvitations(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeleteInvitationRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InvitationId != 0 {
		n += 1 + sovInvitations(uint64(m.InvitationId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovInvitations(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozInvitations(x uint64) (n int) {
	return sovInvitations(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Invitation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowInvitations
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Invitation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Invitation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InvitationId", wireType)
			}
			m.InvitationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInvitations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InvitationId |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInvitations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInvitations
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthInvitations
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipInvitations(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthInvitations
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthInvitations
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListInvitationsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowInvitations
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListInvitationsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListInvitationsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipInvitations(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthInvitations
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthInvitations
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListInvitationsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowInvitations
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListInvitationsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListInvitationsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Invitations", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInvitations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthInvitations
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthInvitations
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Invitations = append(m.Invitations, &Invitation{})
			if err := m.Invitations[len(m.Invitations)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipInvitations(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthInvitations
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthInvitations
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetInvitationRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowInvitations
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetInvitationRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetInvitationRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInvitations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInvitations
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthInvitations
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipInvitations(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthInvitations
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthInvitations
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateInvitationRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowInvitations
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateInvitationRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateInvitationRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInvitations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInvitations
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthInvitations
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipInvitations(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthInvitations
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthInvitations
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteInvitationRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowInvitations
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteInvitationRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteInvitationRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InvitationId", wireType)
			}
			m.InvitationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInvitations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InvitationId |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipInvitations(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthInvitations
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthInvitations
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipInvitations(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowInvitations
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowInvitations
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowInvitations
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthInvitations
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthInvitations
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowInvitations
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipInvitations(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthInvitations
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthInvitations = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowInvitations   = fmt.Errorf("proto: integer overflow")
)
