// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: entries.proto

package api_pb

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *Entry) Validate() error {
	if this.Author != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Author); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Author", err)
		}
	}
	if this.PublishedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.PublishedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("PublishedAt", err)
		}
	}
	if this.UpdatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
		}
	}
	if this.Blog != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Blog); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Blog", err)
		}
	}
	return nil
}
func (this *ListEntriesRequest) Validate() error {
	if !(this.PageSize > -1) {
		return github_com_mwitkow_go_proto_validators.FieldError("PageSize", fmt.Errorf(`value '%v' must be greater than '-1'`, this.PageSize))
	}
	if !(this.PageSize < 101) {
		return github_com_mwitkow_go_proto_validators.FieldError("PageSize", fmt.Errorf(`value '%v' must be less than '101'`, this.PageSize))
	}
	return nil
}
func (this *ListEntriesResponse) Validate() error {
	for _, item := range this.Entries {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Entries", err)
			}
		}
	}
	return nil
}
