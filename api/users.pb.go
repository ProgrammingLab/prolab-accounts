// Code generated by protoc-gen-go. DO NOT EDIT.
// source: users.proto

package api_pb // import "github.com/ProgrammingLab/prolab-accounts/api"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import _ "github.com/mwitkow/go-proto-validators"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ProfileScope int32

const (
	ProfileScope_MEMBERS_ONLY ProfileScope = 0
	ProfileScope_PUBLIC       ProfileScope = 1
)

var ProfileScope_name = map[int32]string{
	0: "MEMBERS_ONLY",
	1: "PUBLIC",
}
var ProfileScope_value = map[string]int32{
	"MEMBERS_ONLY": 0,
	"PUBLIC":       1,
}

func (x ProfileScope) String() string {
	return proto.EnumName(ProfileScope_name, int32(x))
}
func (ProfileScope) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_users_af14cc4b453bebf0, []int{0}
}

type User struct {
	UserId               uint32       `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name                 string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email                string       `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	FullName             string       `protobuf:"bytes,4,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	IconUrl              string       `protobuf:"bytes,5,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	Description          string       `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Grade                int32        `protobuf:"varint,7,opt,name=grade,proto3" json:"grade,omitempty"`
	Left                 bool         `protobuf:"varint,8,opt,name=left,proto3" json:"left,omitempty"`
	Role                 *Role        `protobuf:"bytes,11,opt,name=role,proto3" json:"role,omitempty"`
	TwitterScreenName    string       `protobuf:"bytes,12,opt,name=twitter_screen_name,json=twitterScreenName,proto3" json:"twitter_screen_name,omitempty"`
	GithubUserName       string       `protobuf:"bytes,13,opt,name=github_user_name,json=githubUserName,proto3" json:"github_user_name,omitempty"`
	Department           *Department  `protobuf:"bytes,14,opt,name=department,proto3" json:"department,omitempty"`
	ProfileScope         ProfileScope `protobuf:"varint,15,opt,name=profile_scope,json=profileScope,proto3,enum=programming_lab.prolab_accounts.ProfileScope" json:"profile_scope,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_users_af14cc4b453bebf0, []int{0}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *User) GetIconUrl() string {
	if m != nil {
		return m.IconUrl
	}
	return ""
}

func (m *User) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *User) GetGrade() int32 {
	if m != nil {
		return m.Grade
	}
	return 0
}

func (m *User) GetLeft() bool {
	if m != nil {
		return m.Left
	}
	return false
}

func (m *User) GetRole() *Role {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *User) GetTwitterScreenName() string {
	if m != nil {
		return m.TwitterScreenName
	}
	return ""
}

func (m *User) GetGithubUserName() string {
	if m != nil {
		return m.GithubUserName
	}
	return ""
}

func (m *User) GetDepartment() *Department {
	if m != nil {
		return m.Department
	}
	return nil
}

func (m *User) GetProfileScope() ProfileScope {
	if m != nil {
		return m.ProfileScope
	}
	return ProfileScope_MEMBERS_ONLY
}

type ListUsersRequest struct {
	PageToken            uint32   `protobuf:"varint,1,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListUsersRequest) Reset()         { *m = ListUsersRequest{} }
func (m *ListUsersRequest) String() string { return proto.CompactTextString(m) }
func (*ListUsersRequest) ProtoMessage()    {}
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_users_af14cc4b453bebf0, []int{1}
}
func (m *ListUsersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUsersRequest.Unmarshal(m, b)
}
func (m *ListUsersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUsersRequest.Marshal(b, m, deterministic)
}
func (dst *ListUsersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUsersRequest.Merge(dst, src)
}
func (m *ListUsersRequest) XXX_Size() int {
	return xxx_messageInfo_ListUsersRequest.Size(m)
}
func (m *ListUsersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUsersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListUsersRequest proto.InternalMessageInfo

func (m *ListUsersRequest) GetPageToken() uint32 {
	if m != nil {
		return m.PageToken
	}
	return 0
}

func (m *ListUsersRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type ListUsersResponse struct {
	Users                []*User  `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	NextPageToken        uint32   `protobuf:"varint,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListUsersResponse) Reset()         { *m = ListUsersResponse{} }
func (m *ListUsersResponse) String() string { return proto.CompactTextString(m) }
func (*ListUsersResponse) ProtoMessage()    {}
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_users_af14cc4b453bebf0, []int{2}
}
func (m *ListUsersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUsersResponse.Unmarshal(m, b)
}
func (m *ListUsersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUsersResponse.Marshal(b, m, deterministic)
}
func (dst *ListUsersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUsersResponse.Merge(dst, src)
}
func (m *ListUsersResponse) XXX_Size() int {
	return xxx_messageInfo_ListUsersResponse.Size(m)
}
func (m *ListUsersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUsersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListUsersResponse proto.InternalMessageInfo

func (m *ListUsersResponse) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *ListUsersResponse) GetNextPageToken() uint32 {
	if m != nil {
		return m.NextPageToken
	}
	return 0
}

type GetUserRequest struct {
	UserName             string   `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserRequest) Reset()         { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()    {}
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_users_af14cc4b453bebf0, []int{3}
}
func (m *GetUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserRequest.Unmarshal(m, b)
}
func (m *GetUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserRequest.Marshal(b, m, deterministic)
}
func (dst *GetUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserRequest.Merge(dst, src)
}
func (m *GetUserRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserRequest.Size(m)
}
func (m *GetUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserRequest proto.InternalMessageInfo

func (m *GetUserRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type CreateUserRequest struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	RegisterationToken   string   `protobuf:"bytes,2,opt,name=registeration_token,json=registerationToken,proto3" json:"registeration_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateUserRequest) Reset()         { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()    {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_users_af14cc4b453bebf0, []int{4}
}
func (m *CreateUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateUserRequest.Unmarshal(m, b)
}
func (m *CreateUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateUserRequest.Marshal(b, m, deterministic)
}
func (dst *CreateUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateUserRequest.Merge(dst, src)
}
func (m *CreateUserRequest) XXX_Size() int {
	return xxx_messageInfo_CreateUserRequest.Size(m)
}
func (m *CreateUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateUserRequest proto.InternalMessageInfo

func (m *CreateUserRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *CreateUserRequest) GetRegisterationToken() string {
	if m != nil {
		return m.RegisterationToken
	}
	return ""
}

type GetCurrentUserRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCurrentUserRequest) Reset()         { *m = GetCurrentUserRequest{} }
func (m *GetCurrentUserRequest) String() string { return proto.CompactTextString(m) }
func (*GetCurrentUserRequest) ProtoMessage()    {}
func (*GetCurrentUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_users_af14cc4b453bebf0, []int{5}
}
func (m *GetCurrentUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCurrentUserRequest.Unmarshal(m, b)
}
func (m *GetCurrentUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCurrentUserRequest.Marshal(b, m, deterministic)
}
func (dst *GetCurrentUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCurrentUserRequest.Merge(dst, src)
}
func (m *GetCurrentUserRequest) XXX_Size() int {
	return xxx_messageInfo_GetCurrentUserRequest.Size(m)
}
func (m *GetCurrentUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCurrentUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCurrentUserRequest proto.InternalMessageInfo

type UpdateUserProfileRequest struct {
	FullName             string       `protobuf:"bytes,1,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Description          string       `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Grade                int32        `protobuf:"varint,3,opt,name=grade,proto3" json:"grade,omitempty"`
	Left                 bool         `protobuf:"varint,4,opt,name=left,proto3" json:"left,omitempty"`
	RoleId               uint32       `protobuf:"varint,5,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	TwitterScreenName    string       `protobuf:"bytes,6,opt,name=twitter_screen_name,json=twitterScreenName,proto3" json:"twitter_screen_name,omitempty"`
	GithubUserName       string       `protobuf:"bytes,7,opt,name=github_user_name,json=githubUserName,proto3" json:"github_user_name,omitempty"`
	DepartmentId         uint32       `protobuf:"varint,8,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	ProfileScope         ProfileScope `protobuf:"varint,9,opt,name=profile_scope,json=profileScope,proto3,enum=programming_lab.prolab_accounts.ProfileScope" json:"profile_scope,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UpdateUserProfileRequest) Reset()         { *m = UpdateUserProfileRequest{} }
func (m *UpdateUserProfileRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateUserProfileRequest) ProtoMessage()    {}
func (*UpdateUserProfileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_users_af14cc4b453bebf0, []int{6}
}
func (m *UpdateUserProfileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserProfileRequest.Unmarshal(m, b)
}
func (m *UpdateUserProfileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserProfileRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateUserProfileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserProfileRequest.Merge(dst, src)
}
func (m *UpdateUserProfileRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateUserProfileRequest.Size(m)
}
func (m *UpdateUserProfileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserProfileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserProfileRequest proto.InternalMessageInfo

func (m *UpdateUserProfileRequest) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *UpdateUserProfileRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UpdateUserProfileRequest) GetGrade() int32 {
	if m != nil {
		return m.Grade
	}
	return 0
}

func (m *UpdateUserProfileRequest) GetLeft() bool {
	if m != nil {
		return m.Left
	}
	return false
}

func (m *UpdateUserProfileRequest) GetRoleId() uint32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

func (m *UpdateUserProfileRequest) GetTwitterScreenName() string {
	if m != nil {
		return m.TwitterScreenName
	}
	return ""
}

func (m *UpdateUserProfileRequest) GetGithubUserName() string {
	if m != nil {
		return m.GithubUserName
	}
	return ""
}

func (m *UpdateUserProfileRequest) GetDepartmentId() uint32 {
	if m != nil {
		return m.DepartmentId
	}
	return 0
}

func (m *UpdateUserProfileRequest) GetProfileScope() ProfileScope {
	if m != nil {
		return m.ProfileScope
	}
	return ProfileScope_MEMBERS_ONLY
}

type UpdateUserIconRequest struct {
	Image                []byte   `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUserIconRequest) Reset()         { *m = UpdateUserIconRequest{} }
func (m *UpdateUserIconRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateUserIconRequest) ProtoMessage()    {}
func (*UpdateUserIconRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_users_af14cc4b453bebf0, []int{7}
}
func (m *UpdateUserIconRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserIconRequest.Unmarshal(m, b)
}
func (m *UpdateUserIconRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserIconRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateUserIconRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserIconRequest.Merge(dst, src)
}
func (m *UpdateUserIconRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateUserIconRequest.Size(m)
}
func (m *UpdateUserIconRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserIconRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserIconRequest proto.InternalMessageInfo

func (m *UpdateUserIconRequest) GetImage() []byte {
	if m != nil {
		return m.Image
	}
	return nil
}

type UpdatePasswordRequest struct {
	Password             string   `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	NewPassword          string   `protobuf:"bytes,2,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	NewPasswordRepeat    string   `protobuf:"bytes,3,opt,name=new_password_repeat,json=newPasswordRepeat,proto3" json:"new_password_repeat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePasswordRequest) Reset()         { *m = UpdatePasswordRequest{} }
func (m *UpdatePasswordRequest) String() string { return proto.CompactTextString(m) }
func (*UpdatePasswordRequest) ProtoMessage()    {}
func (*UpdatePasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_users_af14cc4b453bebf0, []int{8}
}
func (m *UpdatePasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePasswordRequest.Unmarshal(m, b)
}
func (m *UpdatePasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePasswordRequest.Marshal(b, m, deterministic)
}
func (dst *UpdatePasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePasswordRequest.Merge(dst, src)
}
func (m *UpdatePasswordRequest) XXX_Size() int {
	return xxx_messageInfo_UpdatePasswordRequest.Size(m)
}
func (m *UpdatePasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePasswordRequest proto.InternalMessageInfo

func (m *UpdatePasswordRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *UpdatePasswordRequest) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

func (m *UpdatePasswordRequest) GetNewPasswordRepeat() string {
	if m != nil {
		return m.NewPasswordRepeat
	}
	return ""
}

func init() {
	proto.RegisterType((*User)(nil), "programming_lab.prolab_accounts.User")
	proto.RegisterType((*ListUsersRequest)(nil), "programming_lab.prolab_accounts.ListUsersRequest")
	proto.RegisterType((*ListUsersResponse)(nil), "programming_lab.prolab_accounts.ListUsersResponse")
	proto.RegisterType((*GetUserRequest)(nil), "programming_lab.prolab_accounts.GetUserRequest")
	proto.RegisterType((*CreateUserRequest)(nil), "programming_lab.prolab_accounts.CreateUserRequest")
	proto.RegisterType((*GetCurrentUserRequest)(nil), "programming_lab.prolab_accounts.GetCurrentUserRequest")
	proto.RegisterType((*UpdateUserProfileRequest)(nil), "programming_lab.prolab_accounts.UpdateUserProfileRequest")
	proto.RegisterType((*UpdateUserIconRequest)(nil), "programming_lab.prolab_accounts.UpdateUserIconRequest")
	proto.RegisterType((*UpdatePasswordRequest)(nil), "programming_lab.prolab_accounts.UpdatePasswordRequest")
	proto.RegisterEnum("programming_lab.prolab_accounts.ProfileScope", ProfileScope_name, ProfileScope_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	ListPublicUsers(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (*ListUsersResponse, error)
	GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*User, error)
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*User, error)
	GetCurrentUser(ctx context.Context, in *GetCurrentUserRequest, opts ...grpc.CallOption) (*User, error)
	UpdateUserProfile(ctx context.Context, in *UpdateUserProfileRequest, opts ...grpc.CallOption) (*User, error)
	UpdateUserIcon(ctx context.Context, in *UpdateUserIconRequest, opts ...grpc.CallOption) (*User, error)
	UpdatePassword(ctx context.Context, in *UpdatePasswordRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) ListPublicUsers(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (*ListUsersResponse, error) {
	out := new(ListUsersResponse)
	err := c.cc.Invoke(ctx, "/programming_lab.prolab_accounts.UserService/ListPublicUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/programming_lab.prolab_accounts.UserService/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/programming_lab.prolab_accounts.UserService/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetCurrentUser(ctx context.Context, in *GetCurrentUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/programming_lab.prolab_accounts.UserService/GetCurrentUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateUserProfile(ctx context.Context, in *UpdateUserProfileRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/programming_lab.prolab_accounts.UserService/UpdateUserProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateUserIcon(ctx context.Context, in *UpdateUserIconRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/programming_lab.prolab_accounts.UserService/UpdateUserIcon", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdatePassword(ctx context.Context, in *UpdatePasswordRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/programming_lab.prolab_accounts.UserService/UpdatePassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	ListPublicUsers(context.Context, *ListUsersRequest) (*ListUsersResponse, error)
	GetUser(context.Context, *GetUserRequest) (*User, error)
	CreateUser(context.Context, *CreateUserRequest) (*User, error)
	GetCurrentUser(context.Context, *GetCurrentUserRequest) (*User, error)
	UpdateUserProfile(context.Context, *UpdateUserProfileRequest) (*User, error)
	UpdateUserIcon(context.Context, *UpdateUserIconRequest) (*User, error)
	UpdatePassword(context.Context, *UpdatePasswordRequest) (*empty.Empty, error)
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_ListPublicUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ListPublicUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/programming_lab.prolab_accounts.UserService/ListPublicUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ListPublicUsers(ctx, req.(*ListUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/programming_lab.prolab_accounts.UserService/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUser(ctx, req.(*GetUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/programming_lab.prolab_accounts.UserService/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetCurrentUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCurrentUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetCurrentUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/programming_lab.prolab_accounts.UserService/GetCurrentUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetCurrentUser(ctx, req.(*GetCurrentUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateUserProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateUserProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/programming_lab.prolab_accounts.UserService/UpdateUserProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateUserProfile(ctx, req.(*UpdateUserProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateUserIcon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserIconRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateUserIcon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/programming_lab.prolab_accounts.UserService/UpdateUserIcon",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateUserIcon(ctx, req.(*UpdateUserIconRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdatePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdatePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/programming_lab.prolab_accounts.UserService/UpdatePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdatePassword(ctx, req.(*UpdatePasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "programming_lab.prolab_accounts.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListPublicUsers",
			Handler:    _UserService_ListPublicUsers_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _UserService_GetUser_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _UserService_CreateUser_Handler,
		},
		{
			MethodName: "GetCurrentUser",
			Handler:    _UserService_GetCurrentUser_Handler,
		},
		{
			MethodName: "UpdateUserProfile",
			Handler:    _UserService_UpdateUserProfile_Handler,
		},
		{
			MethodName: "UpdateUserIcon",
			Handler:    _UserService_UpdateUserIcon_Handler,
		},
		{
			MethodName: "UpdatePassword",
			Handler:    _UserService_UpdatePassword_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "users.proto",
}

func init() { proto.RegisterFile("users.proto", fileDescriptor_users_af14cc4b453bebf0) }

var fileDescriptor_users_af14cc4b453bebf0 = []byte{
	// 1131 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0x5b, 0x6f, 0x1b, 0x45,
	0x1b, 0xee, 0x26, 0x3e, 0xbe, 0x3e, 0xc4, 0x9e, 0xe6, 0xb0, 0xdf, 0xe6, 0xa3, 0x31, 0x4b, 0x40,
	0x6e, 0xda, 0xf5, 0xb6, 0x01, 0x22, 0xa5, 0xbd, 0xc2, 0x21, 0x2a, 0x81, 0x34, 0x58, 0x1b, 0x72,
	0x41, 0x43, 0xbb, 0x1a, 0x7b, 0x27, 0x66, 0xd5, 0xf5, 0xee, 0x32, 0x3b, 0xae, 0x43, 0xaa, 0x00,
	0x02, 0xa9, 0xea, 0x1d, 0x17, 0xfc, 0x0c, 0xfe, 0x0c, 0x12, 0x3f, 0x20, 0x52, 0xc4, 0x0f, 0x41,
	0x33, 0xb3, 0x1b, 0x6f, 0x0e, 0xc8, 0x86, 0xbb, 0x79, 0x4f, 0x33, 0xcf, 0x3b, 0xef, 0x3c, 0x8f,
	0x06, 0x4a, 0xc3, 0x88, 0xd0, 0xa8, 0x15, 0xd2, 0x80, 0x05, 0x68, 0x25, 0xa4, 0x41, 0x9f, 0xe2,
	0xc1, 0xc0, 0xf5, 0xfb, 0xb6, 0x87, 0xbb, 0xdc, 0xed, 0xe1, 0xae, 0x8d, 0x7b, 0xbd, 0x60, 0xe8,
	0xb3, 0x48, 0xdb, 0xe8, 0xbb, 0xec, 0xdb, 0x61, 0xb7, 0xd5, 0x0b, 0x06, 0xe6, 0x60, 0xe4, 0xb2,
	0x97, 0xc1, 0xc8, 0xec, 0x07, 0x86, 0xa8, 0x36, 0x5e, 0x61, 0xcf, 0x75, 0x30, 0x0b, 0x68, 0x64,
	0x5e, 0x2c, 0xe5, 0xc6, 0xda, 0xff, 0xfb, 0x41, 0xd0, 0xf7, 0x88, 0x89, 0x43, 0xd7, 0xc4, 0xbe,
	0x1f, 0x30, 0xcc, 0xdc, 0xc0, 0x8f, 0x8f, 0xd5, 0x96, 0xe3, 0xa8, 0xb0, 0xba, 0xc3, 0x23, 0x93,
	0x0c, 0x42, 0xf6, 0x7d, 0x1c, 0xac, 0x3b, 0x24, 0xc4, 0x94, 0x0d, 0x88, 0xcf, 0x92, 0xfc, 0x12,
	0x0d, 0x3c, 0x12, 0x1b, 0xfa, 0x2f, 0x19, 0xc8, 0x1c, 0x44, 0x84, 0xa2, 0x25, 0xc8, 0xf3, 0x5e,
	0x6c, 0xd7, 0x51, 0x95, 0x86, 0xd2, 0xac, 0x58, 0x39, 0x6e, 0xee, 0x38, 0x08, 0x41, 0xc6, 0xc7,
	0x03, 0xa2, 0xce, 0x34, 0x94, 0x66, 0xd1, 0x12, 0x6b, 0x34, 0x0f, 0x59, 0x32, 0xc0, 0xae, 0xa7,
	0xce, 0x0a, 0xa7, 0x34, 0xd0, 0x32, 0x14, 0x8f, 0x86, 0x9e, 0x67, 0x8b, 0xf4, 0x8c, 0x88, 0x14,
	0xb8, 0x63, 0x8f, 0x97, 0xfc, 0x0f, 0x0a, 0x6e, 0x2f, 0xf0, 0xed, 0x21, 0xf5, 0xd4, 0xac, 0x88,
	0xe5, 0xb9, 0x7d, 0x40, 0x3d, 0xd4, 0x80, 0x92, 0x43, 0xa2, 0x1e, 0x75, 0x43, 0xde, 0x96, 0x9a,
	0x13, 0xd1, 0xb4, 0x8b, 0x9f, 0xd7, 0xa7, 0xd8, 0x21, 0x6a, 0xbe, 0xa1, 0x34, 0xb3, 0x96, 0x34,
	0x38, 0x32, 0x8f, 0x1c, 0x31, 0xb5, 0xd0, 0x50, 0x9a, 0x05, 0x4b, 0xac, 0xd1, 0x26, 0x64, 0x78,
	0x7b, 0x6a, 0xa9, 0xa1, 0x34, 0x4b, 0xeb, 0xef, 0xb7, 0x26, 0x8c, 0xa4, 0x65, 0x05, 0x1e, 0xb1,
	0x44, 0x09, 0x6a, 0xc1, 0x6d, 0x36, 0x72, 0x19, 0x23, 0xd4, 0x8e, 0x7a, 0x94, 0x10, 0x5f, 0x36,
	0x52, 0x16, 0x70, 0xea, 0x71, 0x68, 0x5f, 0x44, 0x44, 0x47, 0x4d, 0xa8, 0xc9, 0x79, 0xda, 0xe2,
	0xe2, 0x44, 0x72, 0x45, 0x24, 0x57, 0xa5, 0x9f, 0xdf, 0xab, 0xc8, 0xfc, 0x02, 0x60, 0x3c, 0x06,
	0xb5, 0x2a, 0xa0, 0xdd, 0x9b, 0x08, 0xed, 0xd3, 0x8b, 0x12, 0x2b, 0x55, 0x8e, 0x2c, 0xa8, 0x84,
	0x34, 0x38, 0x72, 0x3d, 0x62, 0x47, 0xbd, 0x20, 0x24, 0xea, 0x5c, 0x43, 0x69, 0x56, 0xd7, 0x8d,
	0x89, 0xfb, 0x75, 0x64, 0xd5, 0x3e, 0x2f, 0xb2, 0xca, 0x61, 0xca, 0xd2, 0xf7, 0xa0, 0xb6, 0xeb,
	0x46, 0x8c, 0x03, 0x8e, 0x2c, 0xf2, 0xdd, 0x90, 0x44, 0x0c, 0xbd, 0x03, 0x10, 0xe2, 0x3e, 0xb1,
	0x59, 0xf0, 0x92, 0xf8, 0xf1, 0x9b, 0x28, 0x72, 0xcf, 0x57, 0xdc, 0xc1, 0x87, 0x2d, 0xc2, 0x91,
	0x7b, 0x22, 0xdf, 0x46, 0xd6, 0x2a, 0x70, 0xc7, 0xbe, 0x7b, 0x42, 0xf4, 0x63, 0xa8, 0xa7, 0xf6,
	0x8b, 0xc2, 0xc0, 0x8f, 0x08, 0x7a, 0x0c, 0x59, 0xc1, 0x16, 0x55, 0x69, 0xcc, 0x4e, 0x35, 0x1b,
	0x5e, 0x6e, 0xc9, 0x1a, 0xf4, 0x01, 0xcc, 0xf9, 0xe4, 0x98, 0xd9, 0x29, 0x48, 0x33, 0x02, 0x52,
	0x85, 0xbb, 0x3b, 0x09, 0x2c, 0xdd, 0x80, 0xea, 0x13, 0x22, 0x0e, 0x4e, 0xfa, 0x58, 0x86, 0xe2,
	0x78, 0x3e, 0x8a, 0x7c, 0x95, 0xc3, 0x78, 0x32, 0xfa, 0x8f, 0x50, 0xdf, 0xa2, 0x04, 0x33, 0x92,
	0xae, 0xd8, 0x84, 0x0c, 0x4f, 0x10, 0xc9, 0x53, 0xe3, 0x14, 0x25, 0xc8, 0x84, 0xdb, 0x94, 0xf4,
	0xdd, 0x88, 0x11, 0x2a, 0x38, 0x9a, 0x82, 0x5a, 0xb4, 0xd0, 0xa5, 0x90, 0xc4, 0xbb, 0x04, 0x0b,
	0x4f, 0x08, 0xdb, 0x1a, 0x52, 0x4a, 0xfc, 0x34, 0x6c, 0xfd, 0x8f, 0x59, 0x50, 0x0f, 0x42, 0x27,
	0x86, 0x16, 0xcf, 0x2e, 0x41, 0xb8, 0x9a, 0x66, 0x9a, 0xe8, 0xa9, 0x9d, 0x3f, 0x3f, 0x5b, 0x99,
	0x3d, 0xfe, 0x49, 0x49, 0x51, 0xee, 0xee, 0x65, 0x5e, 0xcd, 0xa4, 0xf3, 0x0a, 0x97, 0x09, 0x76,
	0x27, 0x21, 0x18, 0x27, 0x74, 0xb6, 0x5d, 0x38, 0x3f, 0x5b, 0xc9, 0xd4, 0x6e, 0xa9, 0xb9, 0xab,
	0x54, 0xcb, 0xa4, 0xa8, 0xb6, 0x04, 0x79, 0xce, 0x1b, 0xae, 0x18, 0x59, 0xa9, 0x18, 0xdc, 0xdc,
	0x71, 0xd0, 0xe7, 0x37, 0x13, 0x49, 0xf0, 0xba, 0xad, 0x9d, 0x9f, 0xad, 0x2c, 0xc2, 0xfc, 0x8b,
	0xc3, 0x4f, 0x8c, 0x67, 0xd8, 0x38, 0x79, 0x60, 0x6c, 0xda, 0xcf, 0x5f, 0x3f, 0xb8, 0xff, 0xf0,
	0xe3, 0xd3, 0xd5, 0x9b, 0x48, 0xf6, 0xd9, 0x0d, 0x24, 0xcb, 0x8b, 0x8d, 0xee, 0x9c, 0x9f, 0xad,
	0x68, 0xb0, 0xf8, 0xa2, 0x79, 0x88, 0x8d, 0x93, 0x6f, 0x9c, 0xe7, 0xf7, 0x8c, 0xbb, 0x6b, 0xc9,
	0x72, 0xf5, 0xb8, 0x79, 0x8d, 0x84, 0xef, 0x41, 0x65, 0xcc, 0x22, 0x0e, 0xba, 0x20, 0x40, 0x97,
	0xc7, 0xce, 0x1d, 0x07, 0x1d, 0x5e, 0x25, 0x57, 0xf1, 0x3f, 0x90, 0x4b, 0xde, 0xf1, 0x5b, 0x45,
	0xb9, 0xc2, 0x32, 0x03, 0x16, 0xc6, 0x13, 0xdd, 0xe9, 0x05, 0x7e, 0x32, 0xce, 0x79, 0xc8, 0xba,
	0x03, 0xdc, 0x97, 0xa3, 0x2c, 0x5b, 0xd2, 0xd0, 0xdf, 0x28, 0x49, 0x7e, 0x07, 0x47, 0xd1, 0x28,
	0xa0, 0x4e, 0x92, 0xaf, 0x41, 0x21, 0x8c, 0x5d, 0xc9, 0x8b, 0x4e, 0x6c, 0xf4, 0x2e, 0x94, 0x7d,
	0x32, 0xb2, 0x2f, 0xe2, 0xf2, 0xe9, 0x95, 0x7c, 0x32, 0x4a, 0x76, 0xe1, 0x42, 0x97, 0x4e, 0xb1,
	0x29, 0x09, 0x09, 0x66, 0xb1, 0x96, 0xd7, 0x53, 0x99, 0x96, 0x08, 0xac, 0xdd, 0x87, 0x72, 0xba,
	0x3d, 0x54, 0x83, 0xf2, 0xd3, 0xed, 0xa7, 0xed, 0x6d, 0x6b, 0xdf, 0xfe, 0x72, 0x6f, 0xf7, 0xeb,
	0xda, 0x2d, 0x04, 0x90, 0xeb, 0x1c, 0xb4, 0x77, 0x77, 0xb6, 0x6a, 0xca, 0xfa, 0xef, 0x79, 0x28,
	0xf1, 0x06, 0xf7, 0x09, 0x7d, 0xe5, 0xf6, 0x08, 0x7a, 0xab, 0xc0, 0x1c, 0x17, 0x83, 0xce, 0xb0,
	0xeb, 0xb9, 0x3d, 0x21, 0x09, 0xe8, 0xe1, 0xc4, 0xfb, 0xbc, 0x2a, 0x47, 0xda, 0xfa, 0xbf, 0x29,
	0x91, 0x8a, 0xa3, 0x57, 0x7f, 0xfe, 0xf3, 0xaf, 0xdf, 0x66, 0x0a, 0x28, 0x67, 0x4a, 0x11, 0x39,
	0x85, 0x7c, 0x2c, 0x0e, 0xc8, 0x9c, 0xb8, 0xdd, 0x65, 0x19, 0xd1, 0xa6, 0x93, 0x01, 0x5d, 0x13,
	0x47, 0xce, 0x23, 0x24, 0x8f, 0x34, 0x5f, 0x5f, 0x3c, 0xdb, 0x53, 0x74, 0x0a, 0x30, 0x16, 0x1b,
	0x34, 0xb9, 0xa1, 0x6b, 0xca, 0x34, 0x2d, 0x88, 0x79, 0x01, 0xa2, 0xaa, 0xc7, 0x7d, 0x3f, 0x92,
	0xda, 0xf4, 0x83, 0x90, 0xc6, 0x94, 0xd4, 0xa0, 0x8d, 0x69, 0x2e, 0xe1, 0xba, 0x36, 0x4d, 0x0b,
	0xa3, 0x22, 0x60, 0xe4, 0x51, 0x56, 0xc0, 0x40, 0xbf, 0x2a, 0x50, 0xbf, 0xa6, 0x68, 0x68, 0x73,
	0xf2, 0x5e, 0xff, 0xa0, 0x82, 0xd3, 0xc2, 0x50, 0x05, 0x0c, 0xb4, 0x5e, 0x11, 0x30, 0xcc, 0x98,
	0x92, 0x8f, 0x94, 0x35, 0xf4, 0x46, 0x81, 0xea, 0x65, 0x46, 0x4e, 0x71, 0x25, 0x37, 0x52, 0x78,
	0x5a, 0x2c, 0x0b, 0x02, 0xcb, 0x9c, 0x0e, 0x12, 0x0b, 0xff, 0x01, 0x71, 0x20, 0xc7, 0x09, 0x8e,
	0x0b, 0x8e, 0x4e, 0x8b, 0xe3, 0x8a, 0x34, 0x68, 0x8b, 0x2d, 0xf9, 0x1b, 0x6c, 0x25, 0xbf, 0xc1,
	0xd6, 0x36, 0xff, 0x0d, 0xea, 0x8b, 0xe2, 0xe0, 0x9a, 0x56, 0x8d, 0x2f, 0x21, 0x2e, 0x6b, 0x6f,
	0x3c, 0xfb, 0x28, 0xf5, 0x29, 0xed, 0x8c, 0xcf, 0xdc, 0xc5, 0x5d, 0x53, 0x1e, 0x69, 0x24, 0x47,
	0xf2, 0xff, 0xe7, 0x63, 0x1c, 0xba, 0x76, 0xd8, 0xed, 0xe6, 0xc4, 0xfe, 0x1f, 0xfe, 0x1d, 0x00,
	0x00, 0xff, 0xff, 0x7e, 0x8d, 0x7c, 0x2f, 0x01, 0x0b, 0x00, 0x00,
}
