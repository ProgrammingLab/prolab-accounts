syntax = "proto3";

package programming_lab.prolab_accounts;

option go_package = "github.com/ProgrammingLab/prolab-accounts/api;api_pb";


import "validator.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

import "departments.proto";
import "roles.proto";
import "type/image.proto";

service UserService {
  rpc ListPublicUsers (ListUsersRequest) returns (ListUsersResponse) {
    option (google.api.http) = {
      get: "/users"
    };
  }
  rpc ListPrivateUsers (ListUsersRequest) returns (ListUsersResponse) {
    option (google.api.http) = {
      get: "/private/users"
    };
  }
  rpc GetUser (GetUserRequest) returns (User) {
    option (google.api.http) = {
      get: "/users/{user_name}"
    };
  }
  rpc UpdateUserRole (UpdateRoleRequest) returns (User) {
    option (google.api.http) = {
      put: "/admin/users/{user_name}/role"
      body: "*"
    };
  }
  rpc CreateUser (CreateUserRequest) returns (User) {
    option (google.api.http) = {
      post: "/users"
      body: "*"
    };
  }
  rpc GetCurrentUser (GetCurrentUserRequest) returns (User) {
    option (google.api.http) = {
      get: "/user"
    };
  }
  rpc UpdateUserProfile (UpdateUserProfileRequest) returns (User) {
    option (google.api.http) = {
      patch: "/user/profile"
      body: "*"
    };
  }
  rpc UpdateUserIcon (UpdateUserIconRequest) returns (User) {
    option (google.api.http) = {
      post: "/user/icon"
      body: "*"
    };
  }
}

message User {
  uint32 user_id = 1;
  string name = 2;
  string email = 3;
  string full_name = 4;
  string icon_url = 5 [deprecated=true];
  string description = 6;
  int32 grade = 7;
  bool left = 8;
  Role role = 11;
  string twitter_screen_name = 12;
  string github_user_name = 13;
  Department department = 14;
  ProfileScope profile_scope = 15;
  string atcoder_user_name = 16;
  string display_name = 17;
  Authority authority = 18;
  // レスポンスのみ
  type.Image icon = 19;
}

enum ProfileScope {
  MEMBERS_ONLY = 0;
  PUBLIC = 1;
}

enum Authority {
  MEMBER = 0;
  ADMIN = 1;
}

message ListUsersRequest {
  uint32 page_token = 1;
  int32 page_size = 2;
  reserved 3;
  string query = 4 [(validator.field) = {length_lt: 128}];
}

message ListUsersResponse {
  repeated User users = 1;
  uint32 next_page_token = 2;
}

message GetUserRequest {
  string user_name = 1;
}

message UpdateRoleRequest {
  string user_name = 1;
  uint32 role_id = 2;
}

message CreateUserRequest {
  string name = 1 [(validator.field) = {regex: "^[A-Za-z0-9_]{1,20}$"}];
  string full_name = 2 [(validator.field) = {length_lt: 128}];
  string password = 3;
  string registeration_token = 4 [(validator.field) = {length_lt: 128}];
}

message GetCurrentUserRequest {}

message UpdateUserProfileRequest {
  string full_name = 1 [(validator.field) = {length_lt: 128}];
  string description = 2 [(validator.field) = {length_lt: 1024}];
  int32 grade = 3 [(validator.field) = {int_gt: 0, int_lt: 6}];
  bool left = 4;
  uint32 role_id = 5;
  string twitter_screen_name = 6 [(validator.field) = {length_lt: 128}];
  string github_user_name = 7 [(validator.field) = {length_lt: 128}];
  uint32 department_id = 8;
  ProfileScope profile_scope = 9 [(validator.field) = {is_in_enum : true}];
  string atcoder_user_name = 10 [(validator.field) = {length_lt: 128}];
  string display_name = 11 [(validator.field) = {length_lt: 51}];
}

message UpdateUserIconRequest {
  bytes image = 1;
}
